/*항상 범위 주석을 사용한다.*/
CREATE TABLE TBL_MEMBER(
	ID NUMBER CONSTRAINT PK_MEMBER PRIMARY KEY,
	MEMBER_ID VARCHAR2(255) CONSTRAINT UK_MEMBER UNIQUE,
	MEMBER_PASSWORD VARCHAR2(255),
	MEMBER_AGE NUMBER(3) CONSTRAINT CHECK_AGE CHECK(MEMBER_AGE > 0)
);

CREATE TABLE TBL_ORDER(
	ID NUMBER CONSTRAINT PK_ORDER PRIMARY KEY,
	MEMBER_ID NUMBER,
	ORDER_DATE DATE DEFAULT CURRENT_TIMESTAMP,
	ORDER_COUNT NUMBER DEFAULT 1,
	CONSTRAINT FK_ORDER_MEMBER FOREIGN KEY(MEMBER_ID)
	REFERENCES TBL_MEMBER(ID)
);

/*동물원*/
CREATE TABLE TBL_ZOO(
	ID NUMBER CONSTRAINT PK_ZOO PRIMARY KEY,
	ZOO_NAME VARCHAR2(255),
	ZOO_ADDRESS VARCHAR2(255),
	ZOO_ADDRESS_DETAIL VARCHAR2(255),
	ZOO_MAX_ANIMAL NUMBER DEFAULT 0
);

/*동물*/
CREATE TABLE TBL_ANIMAL(
	ID NUMBER CONSTRAINT PK_ANIMAL PRIMARY KEY,
	ANIMAL_NAME VARCHAR2(255),
	ANIMAL_TYPE VARCHAR2(255),
	ANIMAL_AGE NUMBER DEFAULT 0,
	ANIMAL_HEIGHT NUMBER(3, 5),
	ANIMAL_WEIGHT NUMBER(3, 5),
	ZOO_ID NUMBER,
	CONSTRAINT FK_ANIMAL_ZOO FOREIGN KEY(ZOO_ID)
	REFERENCES TBL_ZOO(ID)
);

/*
  	<논리적 설계>
	회원		    주문		        상품
	----------------------------------------
	번호PK		번호PK		    번호PK
	----------------------------------------
	아이디U, NN	날짜NN		    이름NN
	비밀번호NN		회원번호FK, NN		가격D=0
	이름NN		상품번호FK, NN		재고D=0
	주소NN
	이메일
	생일
*/
/*
 * <물리적 설계>
 * 
 * */
DROP TABLE TBL_ORDER;
DROP TABLE TBL_MEMBER;

CREATE TABLE TBL_MEMBER(
	ID NUMBER CONSTRAINT PK_MEMBER PRIMARY KEY,
	MEMBER_ID VARCHAR2(255) CONSTRAINT UK_MEMBER UNIQUE NOT NULL,
	MEMBER_PASSWORD VARCHAR2(255) NOT NULL,
	MEMBER_NAME VARCHAR2(255) NOT NULL,
	MEMBER_ADDRESS VARCHAR2(255) NOT NULL,
	MEMBER_EMAIL VARCHAR2(255),
	MEMBER_BIRTH DATE
);

CREATE TABLE TBL_PRODUCT(
	ID NUMBER CONSTRAINT PK_PRODUCT PRIMARY KEY,
	PRODUCT_NAME VARCHAR2(255) NOT NULL,
	PRODUCT_PRICE NUMBER DEFAULT 0,
	PRODUCT_STOCK NUMBER DEFAULT 0
);

CREATE TABLE TBL_ORDER(
	ID NUMBER CONSTRAINT PK_ORDER PRIMARY KEY,
	ORDER_DATE DATE DEFAULT CURRENT_TIMESTAMP,
	MEMBER_ID NUMBER,
	PRODUCT_ID NUMBER,
	CONSTRAINT FK_ORDER_MEMBER FOREIGN KEY(MEMBER_ID)
	REFERENCES TBL_MEMBER(ID),
	CONSTRAINT FK_ORDER_PRODUCT FOREIGN KEY(PRODUCT_ID)
	REFERENCES TBL_PRODUCT(ID)
);

/*숙제*/
/*1. 요구사항 분석
    꽃 테이블과 화분 테이블 2개가 필요하고,
    꽃을 구매할 때 화분도 같이 구매합니다.
    꽃은 이름과 색상, 가격이 있고,
    화분은 제품번호, 색상, 모양이 있습니다.
    화분은 모든 꽃을 담을 수 없고 정해진 꽃을 담아야 합니다.

2. 개념 모델링
3. 논리 모델링
4. 물리 모델링
5. 구현*/











